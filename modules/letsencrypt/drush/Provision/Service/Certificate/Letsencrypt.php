<?php

/**
 *   A Letsencrypt implementation of the Certificate service type.
 */
class Provision_Service_Certificate_Letsencrypt extends Provision_Service_Certificate {
  public $service = 'Letsencrypt';

  /**
   * Initialize this class, including option handling.
   */
  function init_server() {
    parent::init_server();

    /**
     * Register configuration classes for the create_config / delete_config methods.
     */
    $this->configs['server'][] = 'Provision_Config_Letsencrypt';

    /**
     * Configurable values.
     */
    $this->server->setProperty('letsencrypt_field', 'default');

    /**
     * Non configurable values.
     */
    $this->server->letsencrypt_config_path = $this->server->aegir_root . '/config/letsencrypt.d';
    $this->server->letsencrypt_script_path = $this->server->aegir_root . '/config/letsencrypt';
  }


  /**
   * Pass additional values to the config file templates.
   *
   * Even though the $server variable will be available in your template files,
   * you may wish to pass additional calculated values to your template files.
   *
   * Consider this something like the hook_preprocess stuff in drupal.
   */
  function config_data($config = null, $class = null) {
    // This format of calling the parent is very important!
    $data = parent::config_data($config, $class);

    /**
     * This value will become available as $letsencrypt_current_time
     * in all the config files generated by this service.
     *
     * You could also choose to only conditionally pass values based on
     * the parameters.
     */
    $data['letsencrypt_current_time'] = date(DATE_COOKIE, time());

    return $data;
  }

  /**
   * Implementation of service verify.
   *
   * Called from drush_letsencrypt_provision_verify().
   */
  function verify() {
    if ($this->context->type == 'server') {
      // Create the configuration file directory.
      provision_file()->create_dir($this->server->letsencrypt_config_path, dt("Letsencrypt configuration directory"), 0700);
      // Copy the script directory into place.
      $source = dirname(dirname(dirname(dirname(__FILE__)))) . '/bin/';
      if (drush_copy_dir($source, $this->server->letsencrypt_script_path, FILE_EXISTS_OVERWRITE)) {
        drush_log("Copied Letsencrypt script directory into place.", 'success');
      }
      // Sync the directory to the remote server if needed.
    #  $this->sync($this->server->letsencrypt_config_path);
    }
  }
}
